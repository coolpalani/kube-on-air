---
- name: setup ubuntu based kube node
  hosts: master
  vars:
    gitsite: "git@github.com:"
    gitpath: "{{ lookup('env', 'HOME') }}/git/"
    gobootstrap: /usr/lib/go-1.6
    networking: flannel
    manifest:
      flannel: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      calico:  https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml
  gather_facts: true
  tasks:
    - name: install apt packages
      apt: name={{ item }} state=present update_cache=true
      items:
        - init-system-helpers
        - golang-1.6
      become: true

    - name: disable swap on the master for kublet1.8 to run
      command: swapoff -a
      become: true

    - name: create git root directory
      file: path={{ gitpath }} state=directory mode=0700

    - name: install the latest golang
      import_tasks: tasks/golang.yml

    - name: get the latest etcd
      command: go get -u {{ item }}
      items:
        - github.com/coreos/etcd/cmd/etcd
        - github.com/coreos/etcd/cmd/etcdctl
      environment:
        GOROOT: "{{ lookup('env', 'GOROOT') }}"
        GOPATH: "{{ lookup('env', 'GOPATH') }}"
        PATH: "{{ lookup('env', 'GOROOT') }}/bin:{{ lookup('env', 'GOPATH') }}/bin:/usr/bin:/bin"

    - name: install encription key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: true

    - name: add gce kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
      become: true

    - name: install kubernetes packages
      apt: name={{ item }} state=present update_cache=false
      items:
        - kubelet
        - kubeadm
        - kubernetes-cni
      become: true
      when: ansible_distribution_version == "16.04"

    - name: setup k8s networking by flannel
      command: "kubectl apply --force=true -f {{ manifest.flannel }}"
      when: networking == "flannel" and ansible_distribution_version == "16.04"

    - name: teardown k8s networking by flannel
      command: "kubectl delete --force=true -f {{ manifest.flannel }}"
      when: networking != "flannel" and ansible_distribution_version == "16.04"
      failed_when: false

    - name: setup k8s networking by calico
      command: "kubectl apply --force=true -f {{ manifest.calico }}"
      when: networking == "calico" and ansible_distribution_version == "16.04"

    - name: teardown k8s networking by calico
      command: "kubectl delete --force=true -f {{ manifest.calico }}"
      when: networking != "calico" and ansible_distribution_version == "16.04"
      failed_when: false
