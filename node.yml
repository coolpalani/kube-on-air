---
- name: setup ubuntu based kube node
  hosts: node
  gather_facts: true
  vars:
    k8s:
      token: 1ffe15.c6158f9a2ab7385a
      apiserver: 10.0.0.12:6443
      cert_hash: sha256:16cb5d8133b68bcf832d030b2e9c4b33b2b74aef8fc0b210ef104145e3b415cb
  tasks:
    - name: make console access through ttyS0
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT'
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="console=ttyS0,38400n8"'
        owner: root
        group: root
        mode: 0644
      register: console
      become: true

    - name: update the /boot/grub/grub.cfg to reflect the previous task
      command: grub-mkconfig -o /boot/grub/grub.cfg
      become: true
      when: console.changed

    - name: update /etc/network/interfaces
      copy:
        src: files/etc/network/interfaces
        dest: /etc/network/interfaces
        mode: 0644
        owner: root
        group: root
      become: true
      when: not travis_ci|bool

    - name: install apt packages
      apt: name={{ item }} state=present update_cache=true
      items:
        - init-system-helpers
      become: true

    - name: install docker for ubuntu16.04 or above
      apt: name={{ item }} state=present update_cache=false
      items:
        - docker.io
      become: true
      when: ansible_distribution_version == "16.04"

    - name: add user to the developer groups
      user:
        name: "{{ lookup('env', 'USER') }}"
        append: true
        groups: docker
      become: true

    - name: install gce encription key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: true

    - name: add gce kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
      become: true

    - name: install kubernetes packages
      apt: name={{ item }} state=present update_cache=false
      items:
        - kubelet
        - kubeadm
        - kubernetes-cni
      become: true
      when: ansible_distribution_version == "16.04"

    - name: check if the node is already joining the cluster
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet_conf

    - name: join the k8s cluster!
      command: |
        kubeadm join --token "{{ k8s.token }}" "{{ k8s.apiserver }}"
        --discovery-token-ca-cert-hash "{{ k8s.cert_hash }}"
      become: true
      when: kubelet_conf.stat.exists == false and ansible_distribution_version == "16.04"
